{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","className","placeholder","Tasks","tasks","hideDoneTasks","map","task","done","content","id","Buttons","length","disabled","every","Section","title","body","extraHeaderContent","Header","Container","children","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TASeA,EAPF,kBACT,uBAAMC,UAAU,OAAhB,UACI,uBAAOA,UAAU,cAAcC,YAAY,0BAC3C,wBAAQD,UAAU,eAAlB,+BCeOE,G,MAlBD,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,cAAT,OACV,oBAAIJ,UAAU,iBAAd,SACKG,EAAME,KAAI,SAAAC,GAAI,OACX,qBACAN,UAAS,qBAAgBM,EAAKC,MAAQH,EAAgB,uBAAyB,IAD/E,UAGG,yBAAQJ,UAAU,gBAAlB,cAAoCM,EAAKC,KAAO,OAAS,MAE9D,sBAAMP,UAAS,qBAAgBM,EAAKC,KAAO,qBAAuB,IAAlE,SAEGD,EAAKE,UAEP,wBAAQR,UAAU,sCAAlB,sBATUM,EAAKG,WCmBXC,G,MArBC,SAAC,GAAD,IAAGP,EAAH,EAAGA,MAAOC,EAAV,EAAUA,cAAV,OAEd,qBAAKJ,UAAU,UAAf,SACGG,EAAMQ,OAAS,GACd,qCACE,yBAAQX,UAAU,kBAChBY,SAAUT,EAAMU,OAAM,qBAAGN,QAD3B,UAEGH,EAAgB,aAAU,QAF7B,qBAIA,wBACEJ,UAAU,kBACVY,SAAUT,EAAMU,OAAM,qBAAGN,QAF3B,0CCIOO,G,MAdC,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,KAAMC,EAAf,EAAeA,mBAAf,OACZ,0BAASjB,UAAU,UAAnB,UACI,yBAAQA,UAAU,kBAAlB,UACI,oBAAIA,UAAU,iBAAd,SAAgCe,IAChCE,KAGJ,qBAAKjB,UAAU,gBAAf,SACIgB,SCFGE,G,MANA,SAAC,GAAD,IAAGH,EAAH,EAAGA,MAAH,OACX,iCACI,oBAAIf,UAAU,SAAd,SAAwBe,QCIjBI,G,MANG,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAF,OACd,sBAAMpB,UAAU,YAAhB,SACKoB,MCIHjB,EAAQ,CACZ,CAAEM,GAAI,EAAGD,QAAS,8BAAqBD,MAAM,GAC7C,CAAEE,GAAI,EAAGD,QAAS,wBAAeD,MAAM,IA0B1Bc,MArBf,WACE,OACE,eAAC,EAAD,WAEE,cAAC,EAAD,CAAQN,MAAM,qBAEd,cAAC,EAAD,CACAA,MAAM,qBACNC,KAAM,cAAC,EAAD,MAGR,cAAC,EAAD,CACAD,MAAM,mBACNC,KAAM,cAAC,EAAD,CAAOb,MAAOA,EAAOC,cAfT,QAgBlBa,mBAAoB,cAAC,EAAD,CAASd,MAAOA,EAAOC,cAhBzB,cCDPkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.597dc8cd.chunk.js","sourcesContent":["import \"./style.css\";\n\nconst Form = () => (\n    <form className=\"form\">\n        <input className=\"form__input\" placeholder=\"Co jest do zrobienia?\" />\n        <button className=\"form__button\">Dodaj zadanie</button>\n    </form>\n);\n\nexport default Form;","import \"./style.css\";\n\nconst Tasks = ({tasks, hideDoneTasks}) => (\n    <ul className=\"section__tasks\">\n        {tasks.map(task => (\n            <li key={task.id}\n            className={`tasks__item${task.done && hideDoneTasks ? \" tasks__item--hidden\" : \"\"}`}\n                 >\n               <button className=\"tasks__button\"> {task.done ? \"done\" : \"\"}\n          </button>\n          <span className={`tasks__span${task.done ? \" tasks__span--done\" : \"\"}`}\n              >\n            {task.content}\n            </span>\n           <button className=\"tasks__button tasks__button--remove\">delete</button>\n            </li>\n        ))}\n    </ul>\n);\n\nexport default Tasks;","import React from \"react\";\nimport \"./style.css\";\n\nconst Buttons = ({ tasks, hideDoneTasks }) => (\n\n  <div className=\"buttons\">\n    {tasks.length > 0 && (\n      <>\n        <button className=\"buttons__button\"\n          disabled={tasks.every(({ done }) => !done)}>\n          {hideDoneTasks ? \"Pokaż\" : \"Ukryj\"} ukończone\n        </button>\n        <button\n          className=\"buttons__button\"\n          disabled={tasks.every(({ done }) => done)}\n        >\n          Ukończ wszystkie\n      </button>\n      </>\n    )}\n  </div >\n\n);\n\nexport default Buttons;\n\n","import \"./style.css\"\n\nconst Section = ({title, body, extraHeaderContent}) =>  (\n    <section className=\"section\">\n        <header className=\"section__header\">\n            <h2 className=\"section__title\">{title}</h2>\n           {extraHeaderContent}\n        </header>\n\n        <div className=\"section__body\">\n           {body}\n        </div>\n    </section>\n);\n\n\nexport default Section","import \"./style.css\";\n\nconst Header = ({ title }) => (\n    <header>\n        <h1 className=\"header\">{title}</h1>\n      </header>\n);\n\nexport default Header;","import \"./style.css\";\n\nconst Container = ({children}) => (\n    <main className=\"container\">\n        {children}\n    </main>\n);\n\nexport default Container;","\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\n\nconst tasks = [\n  { id: 1, content: \"przejść na Reacta\", done: false },\n  { id: 2, content: \"zjeść obiad\", done: true },\n];\n\nconst hideDoneTasks = false;\n\nfunction App() {\n  return (\n    <Container>\n\n      <Header title=\"Lista zadań\"/>\n\n      <Section\n      title=\"Dodaj nowe zadanie\"\n      body={<Form />}\n      />\n\n    <Section\n    title=\"Lista zadań\"\n    body={<Tasks tasks={tasks} hideDoneTasks={hideDoneTasks} />}\n    extraHeaderContent={<Buttons tasks={tasks} hideDoneTasks={hideDoneTasks} />}\n    />\n\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}