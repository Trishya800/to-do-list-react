{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","addNewTask","useState","newTaskContent","setNewTaskContent","className","onSubmit","event","preventDefault","contentTrimmed","trim","value","required","placeholder","onChange","target","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","done","onClick","id","content","Buttons","toggleHideDone","setAllDone","deleteAllTasks","length","disabled","every","Section","title","body","extraHeaderContent","Header","Container","children","App","setHideDone","JSON","parse","localStorage","getItem","setTasks","useEffect","setItem","stringify","filter","splice","lenght","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f510b454.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./style.css\";\n\nconst Form = ({ addNewTask }) => {\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n        const contentTrimmed = newTaskContent.trim();\n        if (!contentTrimmed) {\n            return;\n        }\n        addNewTask(contentTrimmed);\n        setNewTaskContent(\"\");\n    }\n    return (\n        <form\n            className=\"form\"\n            onSubmit={onFormSubmit}\n        >\n            <input\n                value={newTaskContent}\n                className=\"form__input\"\n                required\n                placeholder=\"Co jest do zrobienia?\"\n                onChange={({ target }) => setNewTaskContent(target.value)}\n            />\n            <button className=\"form__button\">Dodaj zadanie</button>\n        </form>\n    )\n};\n\nexport default Form;","import \"./style.css\";\n\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\n    <ul className=\"section__tasks\">\n        {tasks.map(task => (\n            <li\n                key={task.id}\n                className={`tasks__item\n                ${task.done && hideDone ? \" tasks__item--hidden\" : \"\"}`}\n            >\n                <button\n                    onClick={() => toggleTaskDone(task.id)}\n                    className=\"tasks__button tasks__button--toggleDone\"\n                >\n                    {task.done ? \"done\" : \"\"}\n                </button>\n                <span\n                    className={`tasks__span\n                    ${task.done ? \" tasks__span--done\" : \"\"}`}\n                >\n                    {task.content}\n                </span>\n                <button\n                    onClick={() => removeTask(task.id)}\n                    className=\"tasks__button tasks__button--remove\"\n                >\n                    delete\n                </button>\n            </li>\n        ))}\n    </ul>\n);\n\nexport default Tasks;","import React from \"react\";\nimport \"./style.css\";\n\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone, deleteAllTasks }) => (\n\n    <div className=\"buttons\" > {\n        tasks.length > 0 && (\n            <>\n                <button\n                    onClick={toggleHideDone}\n                    className=\"buttons__button\"\n                    disabled={tasks.every(({ done }) => !done)} >\n                    {hideDone ? \"Pokaż\" : \"Ukryj\"} ukończone\n                </button>\n\n                <button\n                    className=\"buttons__button\"\n                    onClick={setAllDone}\n                    disabled={tasks.every(({ done }) => done)} >\n                    {hideDone ? \"\" : \"Zaznacz wszystkie\"} \n                </button>\n\n                <button\n                    onClick={deleteAllTasks}\n                    className=\"buttons__button\">\n                    Usuń wszystkie\n                </button>\n            </>\n        )}\n    </div>\n\n);\n\nexport default Buttons;","import \"./style.css\";\n\nconst Section = ({ title, body, extraHeaderContent }) => (\n    <section className=\"section\">\n        <header className=\"section__header\">\n            <h2 className=\"section__title\">{title}</h2>\n            {extraHeaderContent}\n        </header>\n\n        <div className=\"section__body\">\n            {body}\n        </div>\n    </section>\n);\n\nexport default Section;","import \"./style.css\";\n\nconst Header = ({ title }) => (\n    <header>\n        <h1 className=\"header\">{title}</h1>\n    </header>\n);\n\nexport default Header;","import \"./style.css\";\n\nconst Container = ({ children }) => (\n    <main className=\"container\">\n        {children}\n    </main>\n);\n\nexport default Container;","import { useEffect, useState } from \"react\";\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n  const [tasks, setTasks] =\n    useState(JSON.parse(localStorage.getItem(\"tasks\")) || []);\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const removeTask = (id) => {\n    setTasks(tasks => tasks.filter(task => task.id !== id));\n  };\n\n  const toggleTaskDone = (id) => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === id) {\n        return { ...task, done: !task.done };\n      }\n\n      return task;\n    }));\n  };\n\n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({\n      ...task,\n      done: true,\n    })));\n  };\n\n  const addNewTask = (content) => {\n    setTasks(tasks => [\n      ...tasks,\n      {\n        content,\n        done: false,\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\n      },\n    ]);\n  };\n\n  const deleteAllTasks = () => {\n    setTasks(tasks => [\n      ...tasks.splice(0, tasks.lenght)\n    ]);\n  };\n\n  return (\n    <Container>\n      <Header title=\"Lista zadań\" />\n\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form\n          addNewTask={addNewTask}\n        />}\n      />\n\n      <Section\n        title=\"Lista zadań\"\n        body={\n          <Tasks\n            tasks={tasks}\n            hideDone={hideDone}\n            removeTask={removeTask}\n            toggleTaskDone={toggleTaskDone}\n          />\n        }\n        extraHeaderContent={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone}\n            deleteAllTasks={deleteAllTasks}\n          />\n        }\n      />\n    </Container>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}