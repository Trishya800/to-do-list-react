{"version":3,"sources":["GlobalStyle.js","Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/styled.js","Header/index.js","Container/styled.js","Container/index.js","useTasks.js","useLocalStorageState.js","App.js","reportWebVitals.js","index.js","Theme.js"],"names":["GlobalStyle","createGlobalStyle","theme","colors","concerte","FormWrapper","styled","form","breakpoints","small","FormInput","input","alto","teal","FormButton","button","white","Form","addNewTask","useState","newTaskContent","setNewTaskContent","inputRef","useRef","onSubmit","event","preventDefault","contentTrimmed","trim","current","focus","ref","value","required","placeholder","onChange","target","List","ul","Item","li","hidden","css","Content","span","done","Button","toggleDone","japaneseLaurel","remove","crimson","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","onClick","id","content","Wrapper","div","xsmall","Buttons","toggleHideDone","setAllDone","setAllNotDone","selectAll","deleteAllTasks","length","disabled","every","section","Header","header","SectionBody","Title","h2","Section","title","body","extraHeaderContent","h1","Main","main","Container","children","useTasks","keyName","initialValue","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","useLocalStorageState","setTasks","filter","App","setHideDone","setSelectAll","toggleSelectAll","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","medium","large","document","getElementById"],"mappings":"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","file":"static/js/main.71b27699.chunk.js","sourcesContent":["import {createGlobalStyle} from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n    html {\n      box-sizing: border-box;\n    }\n\n    *,\n    ::after,\n    ::before {\n      box-sizing: inherit;\n    }\n\n    body {\n      background-color: ${({ theme }) => theme.colors.concerte};\n      font-family: \"Montserrat\", sans-serif;\n      font-size: smaller;\n    }\n`;\n","import styled from \"styled-components\";\n\nexport const FormWrapper = styled.form`\n    display: grid;\n    grid-template-columns: 1fr auto;\n    grid-gap: 10px;\n    margin: 20px;\n\n    @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n        grid-template-columns: 1fr;\n    }\n`;\n\nexport const FormInput = styled.input`\n    padding: 10px;\n    border: 1px solid ${({ theme }) => theme.colors.alto};\n    color: ${({ theme }) => theme.colors.teal};\n    outline-color: ${({ theme }) => theme.colors.alto};\n    outline-width: thin;\n`;\n\nexport const FormButton = styled.button`\n    background: ${({ theme }) => theme.colors.teal};\n    color: ${({ theme }) => theme.colors.white};\n    padding: 10px;\n    border: none;\n    transition: 0.5s filter;\n\n    &:hover {\n        filter: brightness(110%);\n        transform: scale(1.01);\n    }\n\n    &:active {\n        filter: brightness(120%); \n        transform: scale(1.01);\n    }\n`;","import { useState, useRef } from \"react\";\nimport { FormWrapper, FormInput, FormButton } from \"./styled\";\n\nconst Form = ({ addNewTask }) => {\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\n    const inputRef = useRef(null);\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n        const contentTrimmed = newTaskContent.trim();\n        if (!contentTrimmed) {\n            return;\n        }\n        addNewTask(contentTrimmed);\n        setNewTaskContent(\"\")\n        inputRef.current.focus();\n    }\n    return (\n        <FormWrapper\n            onSubmit={onFormSubmit}\n        >\n            <FormInput\n                ref={inputRef}\n                value={newTaskContent}\n                required\n                placeholder=\"Co jest do zrobienia?\"\n                onChange={({ target }) => setNewTaskContent(target.value)}\n            />\n            <FormButton>\n                Dodaj zadanie\n            </FormButton>\n        </FormWrapper>\n    )\n};\n\nexport default Form;","import styled, { css } from \"styled-components\";\n\nexport const List = styled.ul`\n    list-style: none;\n    margin: 0 0 20px;\n    padding: 0;\n`;\n\nexport const Item = styled.li`\n    display: grid;\n    grid-template-columns: auto 1fr auto;\n    grid-gap: 20px;\n    align-items: center;\n    margin: 0 20px;\n    padding: 10px;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.alto};\n\n    ${({ hidden }) => hidden && css`\n      display: none;\n    `}\n`;\n\nexport const Content = styled.span`\n    word-break: break-all;\n\n    ${({ done }) => done && css`\n      text-decoration-line: line-through;\n    `}\n`;\n\nexport const Button = styled.button`\n    width: 30px;\n    height: 30px;\n    color: ${({ theme }) => theme.colors.white};\n    border: none;\n    font-family: \"Material Icons Outlined\";\n    font-size: 16px;\n    padding: 0;\n    transition: 0.5s filter;\n\n      ${({ toggleDone }) => toggleDone && css`\n          background-color: ${({ theme }) => theme.colors.japaneseLaurel};\n      `}\n\n        &:hover  {\n          filter: brightness(110%);\n        }\n\n        &:active {\n          filter: brightness(130%);\n        }\n\n      ${({ remove }) => remove && css`\n        background-color: ${({ theme }) => theme.colors.crimson};\n\n        &:hover {\n          filter: brightness(110%);\n        }\n\n        &:active {\n          filter: brightness(130%);\n        }\n      `}\n`;","import { List, Item, Content, Button } from \"./styled\"\n\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone}) => (\n    <List>\n        {tasks.map(task => (\n            <Item\n                key={task.id}\n                hidden={task.done && hideDone}\n            >\n                <Button\n                    toggleDone\n                    onClick={() => toggleTaskDone(task.id)}\n                >\n                    {task.done ? \"done\" : \"\"}\n                </Button>\n                <Content\n                    done={task.done}>\n                    {task.content}\n                </Content>\n                <Button\n                    remove\n                    onClick={() => removeTask(task.id)}\n                >\n                    delete\n                </Button>\n            </Item>\n        ))}\n    </List>\n);\n\nexport default Tasks;","import styled from \"styled-components\"\n\nexport const Wrapper = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    margin-right: 20px;\n\n    @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n        justify-content: center;\n        margin-right: 0px;\n    }\n\n    @media (max-width: ${({ theme }) => theme.breakpoints.xsmall}px) {\n        flex-direction: column;\n    }\n`;\n\nexport const Button = styled.button`\n    color: ${({ theme }) => theme.colors.teal};\n    border: none;\n    transition: color 0.5s;\n    background-color: transparent;\n    cursor: pointer;\n\n    @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n        margin: 5px;\n    }\n\n    &:hover {\n       filter: brightness(120%);\n    }\n\n    &:disabled {\n        color: ${({ theme }) => theme.colors.alto};\n        cursor: none;\n        filter: brightness(100%);\n    }\n`;","import { Wrapper, Button } from \"./styled\";\n\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone, setAllNotDone, selectAll, deleteAllTasks }) => (\n\n    <Wrapper > {\n        tasks.length > 0 && (\n            <>\n                <Button\n                    onClick={toggleHideDone}\n                    disabled={tasks.every(({ done }) => !done)} \n                    >\n                    {hideDone ? \"Pokaż\" : \"Ukryj\"} ukończone\n                </Button>\n\n                <Button\n                    onClick={setAllDone}\n                    disabled={tasks.every(({ done }) => done)}\n                >\n                    {selectAll ? \"Odznacz\" : \"Zaznacz wszystkie\"}\n                </Button>\n                <Button\n                    onClick={setAllNotDone}\n                    disabled={tasks.every(({ done }) => !done)}\n                >\n                    {selectAll ? \"\" : \"Odznacz wszystkie\"}\n                </Button>\n\n                <Button\n                    onClick={deleteAllTasks}\n                >\n                    Usuń wszystkie\n                </Button>\n            </>\n        )}\n    </Wrapper>\n\n);\n\nexport default Buttons;","import styled from \"styled-components\";\n\nexport const Wrapper = styled.section`\n    display: grid;\n    margin: 10px;\n    box-shadow: 0 0 5px hsl(0, 0%, 86%);\n    background-color: ${({ theme }) => theme.colors.white};\n`;\n\nexport const Header = styled.header`\n    display: grid;\n    grid-template-columns: auto auto;\n    border-bottom: 3px solid rgb(241 240 242);\n\n    @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n        grid-template-columns: 1fr;\n    }\n`;\n\nexport const SectionBody = styled.div`\n    background-color: ${({ theme }) => theme.colors.white};\n`;\n\nexport const Title = styled.h2`\n    margin-left: 20px;\n\n    @media (max-width: 768px) {\n        text-align: center;\n        margin-left: 0;\n    }\n`;","import { Wrapper, Header, SectionBody, Title } from \"./styled\";\n\nconst Section = ({ title, body, extraHeaderContent }) => (\n    <Wrapper>\n        <Header>\n            <Title>{title}</Title>\n            {extraHeaderContent}\n        </Header>\n\n        <SectionBody>\n            {body}\n        </SectionBody>\n    </Wrapper>\n);\n\nexport default Section;","import styled from \"styled-components\";\n\nexport const Title = styled.h1`\n    margin: 10px;\n    padding-top: 20px;\n\n    @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n        text-align: center;\n    }\n`;","import { Title } from \"./styled.js\";\n\nconst Header = ({ title }) => (\n    <Title>{title}</Title>\n);\n\nexport default Header;","import styled from  \"styled-components\";\n\nexport const Main = styled.main`\n  max-width: 900px;\n  margin: 0 auto;\n`;\n\n","import { Main } from \"./styled.js\";\n\nconst Container = ({ children }) => (\n    <Main>\n        {children}\n    </Main>\n);\n\nexport default Container;","import { useLocalStorageState } from \"./useLocalStorageState\";\n\nexport const useTasks = () => {\n    const [tasks, setTasks] = useLocalStorageState(\"tasks\", []);\n\n    const removeTask = (id) => {\n        setTasks(tasks => tasks.filter(task => task.id !== id));\n    };\n\n    const toggleTaskDone = (id) => {\n        setTasks(tasks => tasks.map(task => {\n            if (task.id === id) {\n                return {\n                    ...task,\n                    done: !task.done,\n                };\n            }\n\n            return task;\n        }));\n    };\n\n    const setAllDone = () => {\n        setTasks(tasks => tasks.map(task => ({\n            ...task,\n            done: true,\n        })));\n    };\n\n    const setAllNotDone = () => {\n        setTasks(tasks => tasks.map(task => ({\n            ...task,\n            done: false,\n        })));\n    };\n\n    const addNewTask = (content) => {\n        setTasks(tasks => [\n            ...tasks,\n            {\n                content,\n                done: false,\n                id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\n            },\n        ]);\n    };\n\n    const deleteAllTasks = () => {\n        setTasks([]);\n    };\n\n    return {\n        tasks,\n        removeTask,\n        toggleTaskDone,\n        setAllDone,\n        setAllNotDone,\n        addNewTask,\n        deleteAllTasks,\n    };\n};","import { useState, useEffect } from \"react\";\n\nexport const useLocalStorageState = (keyName, initialValue) => {\n    const getInitialState = () => {\n        const localStorageTasks = localStorage.getItem(keyName);\n        if (localStorageTasks === null) {\n            return initialValue;\n        }\n\n        return JSON.parse(localStorage.getItem(keyName))\n    }\n\n    const [state, setState] = useState(getInitialState);\n\n    useEffect(() => {\n        localStorage.setItem(keyName, JSON.stringify(state));\n    }, [state, keyName]);\n\n    return [state, setState];\n};","import { useState } from \"react\";\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\nimport { useTasks } from \"./useTasks\";\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const [selectAll, setSelectAll] = useState(false);\n  const toggleSelectAll = () => {\n    setSelectAll(selectAll => !selectAll);\n  };\n\n\n  const {\n    tasks,\n    removeTask,\n    toggleTaskDone,\n    setAllDone,\n    setAllNotDone,\n    addNewTask,\n    deleteAllTasks,\n  } = useTasks();\n\n  return (\n      <Container>\n        <Header title=\"Lista zadań\" />\n        <Section\n          title=\"Dodaj nowe zadanie\"\n          body={<Form addNewTask={addNewTask} />}\n        />\n        <Section\n          title=\"Lista zadań\"\n          body={\n            <Tasks\n              tasks={tasks}\n              hideDone={hideDone}\n              removeTask={removeTask}\n              toggleTaskDone={toggleTaskDone}\n            />\n          }\n          extraHeaderContent={\n            <Buttons\n              tasks={tasks}\n              hideDone={hideDone}\n              toggleHideDone={toggleHideDone}\n              selectAll={selectAll}\n              toggleSelectAll={toggleSelectAll}\n              setAllDone={setAllDone}\n              setAllNotDone={setAllNotDone}\n              deleteAllTasks={deleteAllTasks}\n            />\n          }\n        />\n      </Container>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlobalStyle } from './GlobalStyle.js';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./Theme\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\n    colors: {\n        alto: \"#CFCFCF\",\n        teal: \"#008080\",\n        japaneseLaurel: \"#097B09\",\n        crimson: \"#DC143C\",\n        concerte: \"#F2F2F2\",\n        white: \"#FFFFFF\",\n    },\n    breakpoints: {\n        xsmall: 576,\n        small: 768,\n        medium: 992,\n        large: 1200,\n    }\n};\n\n"],"sourceRoot":""}